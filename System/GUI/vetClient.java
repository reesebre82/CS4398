package System.GUI;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

import System.API.*;

/**
 *
 * @author Jessica
 */
public class vetClient extends javax.swing.JFrame {

    DateFormat dateFormat = new SimpleDateFormat("MM/dd/YY");
    Date date = new Date();
    Calendar cal = Calendar.getInstance();
    DefaultTableModel model;

    /**
     * Creates new form vetEmpl
     */
    public vetClient() {
        initComponents();
        System.out.println("Started Client");

        model = (DefaultTableModel) clientTable.getModel();
        dateTxt.setText(" " + dateFormat.format(date));

        clientTable.setShowHorizontalLines(true);
        clientTable.setShowVerticalLines(true);

        fillTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bBack = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        firstNameL = new javax.swing.JLabel();
        lastNameL = new javax.swing.JLabel();
        phoneL = new javax.swing.JLabel();
        firstNameTxt = new javax.swing.JTextField();
        lastNameTxt = new javax.swing.JTextField();
        phoneTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        clientTable = new javax.swing.JTable();
        bAdd = new javax.swing.JButton();
        bDelete = new javax.swing.JButton();
        bUpdate = new javax.swing.JButton();
        cidTxt = new javax.swing.JLabel();
        cidL = new javax.swing.JLabel();
        bPetEdit = new javax.swing.JButton();
        dateL = new javax.swing.JLabel();
        dateTxt = new javax.swing.JTextField();

        cm = new CustomerManager();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Employee Management");

        bBack.setText("BACK");
        bBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBackActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(167, 231, 225));

        firstNameL.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        firstNameL.setText("FIRST NAME:");

        lastNameL.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        lastNameL.setText("LAST NAME:");

        phoneL.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        phoneL.setText("PHONE #:");

        jLabel1.setFont(new java.awt.Font("Serif", 3, 36)); // NOI18N
        jLabel1.setText("Client");

        jLabel2.setFont(new java.awt.Font("Serif", 3, 36)); // NOI18N
        jLabel2.setText("Management");

        clientTable.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {

        }, new String[] { "CID", "NAME", "LAST NAME", "PHONE #" }) {
            boolean[] canEdit = new boolean[] { false, false, false, false };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        clientTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clientTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(clientTable);
        if (clientTable.getColumnModel().getColumnCount() > 0) {
            clientTable.getColumnModel().getColumn(0).setResizable(false);
            clientTable.getColumnModel().getColumn(1).setResizable(false);
            clientTable.getColumnModel().getColumn(2).setResizable(false);
            clientTable.getColumnModel().getColumn(3).setResizable(false);
        }

        bAdd.setText("ADD");
        bAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddActionPerformed(evt);
            }
        });

        bDelete.setText("DELETE");
        bDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeleteActionPerformed(evt);
            }
        });

        bUpdate.setText("UPDATE");
        bUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUpdateActionPerformed(evt);
            }
        });

        cidTxt.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        cidTxt.setText("###");

        cidL.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        cidL.setText("CID:");

        bPetEdit.setText("EDIT  PET");
        bPetEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPetEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup().addGroup(jPanel1Layout
                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup().addGap(28, 28, 28).addGroup(jPanel1Layout
                                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1)
                                .addGroup(jPanel1Layout.createSequentialGroup().addGroup(jPanel1Layout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup().addGap(12, 12, 12)
                                                .addComponent(jLabel2))
                                        .addGroup(jPanel1Layout.createSequentialGroup().addGroup(jPanel1Layout
                                                .createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(phoneL)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(cidL, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(cidTxt, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(35, 35, 35).addComponent(firstNameL)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel1Layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING,
                                                                false)
                                                        .addComponent(phoneTxt).addComponent(firstNameTxt,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE, 120,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(28, 28, 28).addComponent(lastNameL)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(lastNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 120,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout
                                                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(bDelete, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(bUpdate, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(bAdd, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(bPetEdit, javax.swing.GroupLayout.DEFAULT_SIZE, 100,
                                                        Short.MAX_VALUE)))))
                        .addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addComponent(jScrollPane1,
                                javax.swing.GroupLayout.PREFERRED_SIZE, 759, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(38, Short.MAX_VALUE)));
        jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30).addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup().addComponent(jLabel2).addGap(69, 69, 69)
                                        .addGroup(jPanel1Layout
                                                .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(firstNameL)
                                                .addComponent(firstNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(lastNameL)
                                                .addComponent(lastNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(cidTxt).addComponent(cidL))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout
                                                .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(phoneL).addComponent(phoneTxt,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createSequentialGroup().addComponent(bAdd).addGap(32, 32, 32)
                                        .addComponent(bDelete).addGap(28, 28, 28)
                                        .addGroup(jPanel1Layout
                                                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel1Layout.createSequentialGroup().addGap(62, 62, 62)
                                                        .addComponent(bUpdate))
                                                .addComponent(bPetEdit))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25,
                                                Short.MAX_VALUE)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(22, 22, 22)))));

        dateL.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        dateL.setText("Date:");

        dateTxt.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
                .createSequentialGroup().addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(bBack, javax.swing.GroupLayout.PREFERRED_SIZE, 100,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(dateL).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 80,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap()));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
                .createSequentialGroup().addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(bBack)
                        .addComponent(dateL).addComponent(dateTxt, javax.swing.GroupLayout.PREFERRED_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap()));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    ////////////////////////////////////////////////////////////////////////////////
    private void emplJtable() {

        // create JFrame and JTable
        JFrame frame = new JFrame();
        JTable table = new JTable();

        // create a table model and set a Column Identifiers to this model
        Object[] columns = { "Id", "First Name", "Last Name", "Age" };
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(columns);

        // set the model to the table
        table.setModel(model);

        // Change A JTable Background Color, Font Size, Font Color, Row Height
        table.setBackground(Color.LIGHT_GRAY);
        table.setForeground(Color.black);
        Font font = new Font("", 1, 22);
        table.setFont(font);
        table.setRowHeight(30);

        // create JTextFields
        JTextField textId = new JTextField();
        JTextField textFname = new JTextField();
        JTextField textLname = new JTextField();
        JTextField textAge = new JTextField();

        // create JButtons
        JButton btnAdd = new JButton("Add");
        JButton btnDelete = new JButton("Delete");
        JButton btnUpdate = new JButton("Update");

        textId.setBounds(20, 220, 100, 25);
        textFname.setBounds(20, 250, 100, 25);
        textLname.setBounds(20, 280, 100, 25);
        textAge.setBounds(20, 310, 100, 25);

        btnAdd.setBounds(150, 220, 100, 25);
        btnUpdate.setBounds(150, 265, 100, 25);
        btnDelete.setBounds(150, 310, 100, 25);

        // create JScrollPane
        JScrollPane pane = new JScrollPane(table);
        pane.setBounds(0, 0, 880, 200);

        frame.setLayout(null);

        frame.add(pane);

        // add JTextFields to the jframe
        frame.add(textId);
        frame.add(textFname);
        frame.add(textLname);
        frame.add(textAge);

        // add JButtons to the jframe
        frame.add(btnAdd);
        frame.add(btnDelete);
        frame.add(btnUpdate);

        // create an array of objects to set the row data
        Object[] row = new Object[4];

        // button add row
        btnAdd.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {

                row[0] = textId.getText();
                row[1] = textFname.getText();
                row[2] = textLname.getText();
                row[3] = textAge.getText();

                // add row to the model
                model.addRow(row);
            }
        });

        // button remove row
        btnDelete.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {

                // i = the index of the selected row
                int i = table.getSelectedRow();
                if (i >= 0) {
                    // remove a row from jtable
                    model.removeRow(i);
                } else {
                    System.out.println("Delete Error");
                }
            }
        });

        // get selected row data From table to textfields
        table.addMouseListener(new MouseAdapter() {

            @Override
            public void mouseClicked(MouseEvent e) {

                // i = the index of the selected row
                int i = table.getSelectedRow();

                textId.setText(model.getValueAt(i, 0).toString());
                textFname.setText(model.getValueAt(i, 1).toString());
                textLname.setText(model.getValueAt(i, 2).toString());
                textAge.setText(model.getValueAt(i, 3).toString());
            }
        });

        // button update row
        btnUpdate.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {

                // i = the index of the selected row
                int i = table.getSelectedRow();

                if (i >= 0) {
                    model.setValueAt(textId.getText(), i, 0);
                    model.setValueAt(textFname.getText(), i, 1);
                    model.setValueAt(textLname.getText(), i, 2);
                    model.setValueAt(textAge.getText(), i, 3);
                } else {
                    System.out.println("Update Error");
                }
            }
        });

        frame.setSize(900, 400);
        frame.setLocationRelativeTo(null);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setVisible(true);

        ////////////////////////////////////////////////////////////////////////
    }

    // BACK BOTTON
    private void bBackActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_bBackActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new vetView().setVisible(true);
    }// GEN-LAST:event_bBackActionPerformed

    // ADD BOTTON
    private void bAddActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_bAddActionPerformed
        // TODO add your handling code here
        Customer customer = new Customer();
        customer.setFirstName(firstNameTxt.getText());
        customer.setLastName(lastNameTxt.getText());
        customer.setPhoneNumber(phoneTxt.getText());
        customer.setCustomerID(cm.addCustomer(customer));

        model.insertRow(model.getRowCount(), new Object[] { customer.getCustomerID(), customer.getFirstName(),
                customer.getLastName(), customer.getPhoneNumber() });

    }// GEN-LAST:event_bAddActionPerformed

    // DELETE BOTTON
    private void bDeleteActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_bDeleteActionPerformed
        // TODO add your handling code here:
        // check for selected row first
        if (clientTable.getSelectedRowCount() == 1) {
            int CID = (int) model.getValueAt(clientTable.getSelectedRow(), 0);
            cm.removeCustomer(CID);
            model.removeRow(clientTable.getSelectedRow());

            firstNameTxt.setText("");
            lastNameTxt.setText("");
            phoneTxt.setText("");
        }
    }// GEN-LAST:event_bDeleteActionPerformed

    // UPSATE BOTTON
    private void bUpdateActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_bUpdateActionPerformed
        // TODO add your handling code here:
        if (clientTable.getSelectedRowCount() == 1) {
            int CID = (int) model.getValueAt(clientTable.getSelectedRow(), 0);
            String fname = firstNameTxt.getText();
            String lname = lastNameTxt.getText();
            String phone = phoneTxt.getText();

            Customer customer = new Customer(fname, lname, phone);

            cm.updateCustomer(CID, customer);

            model.setValueAt(fname, clientTable.getSelectedRow(), 1);
            model.setValueAt(lname, clientTable.getSelectedRow(), 2);
            model.setValueAt(phone, clientTable.getSelectedRow(), 3);
        }
    }// GEN-LAST:event_bUpdateActionPerformed

    // CLICK TABLE LINE AND ADD IT BACK TO TXT BOXES
    private void clientTableMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_clientTableMouseClicked
        // TODO add your handling code here:

        String fnameTbl = model.getValueAt(clientTable.getSelectedRow(), 1).toString();
        String lnameTbl = model.getValueAt(clientTable.getSelectedRow(), 2).toString();
        String phoneTbl = model.getValueAt(clientTable.getSelectedRow(), 3).toString();

        firstNameTxt.setText(fnameTbl);
        lastNameTxt.setText(lnameTbl);
        phoneTxt.setText(phoneTbl);

    }// GEN-LAST:event_clientTableMouseClicked

    // go to edit the client's pet
    private void bPetEditActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_bPetEditActionPerformed
        // TODO add your handling code here:
        if (clientTable.getSelectedRowCount() == 1) {
            int CID = (int) model.getValueAt(clientTable.getSelectedRow(), 0);
            this.setVisible(false);
            vetPet vp = new vetPet();
            vp.setVisible(true);
            vp.setCustomer(cm.getCustomer(CID));
            vp.fillTable();
        }
    }// GEN-LAST:event_bPetEditActionPerformed

    private void fillTable() {
        ArrayList<Customer> customers = cm.getCustomers();
        for (int i = 0; i < customers.size(); i++) {
            Customer customer = customers.get(i);
            model.insertRow(model.getRowCount(), new Object[] { customer.getCustomerID(), customer.getFirstName(),
                    customer.getLastName(), customer.getPhoneNumber() });
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAdd;
    private javax.swing.JButton bBack;
    private javax.swing.JButton bDelete;
    private javax.swing.JButton bPetEdit;
    private javax.swing.JButton bUpdate;
    private javax.swing.JLabel cidL;
    private javax.swing.JLabel cidTxt;
    private javax.swing.JTable clientTable;
    private javax.swing.JLabel dateL;
    private javax.swing.JTextField dateTxt;
    private javax.swing.JLabel firstNameL;
    private javax.swing.JTextField firstNameTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lastNameL;
    private javax.swing.JTextField lastNameTxt;
    private javax.swing.JLabel phoneL;
    private javax.swing.JTextField phoneTxt;
    private CustomerManager cm;
    // End of variables declaration//GEN-END:variables
}
